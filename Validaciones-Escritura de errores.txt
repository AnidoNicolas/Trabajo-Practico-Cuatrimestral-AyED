void escribirError(char* error){
    ifstream fErrores ("errores.db");
    int indice=0;
    if(!fErrores){
        ofstream fErrores("errores.db");
    }
    fErrores.open("errores.db", ofstream::out | ofstream::app);
    while(!fErrores.eof()){
        indice=indice+1;
    }

    fErrores<<"ID:"<<indice<<"; Descripcion: "<<error<<endl;
    fErrores.close();
}
void validaciones(ListaEquipo &listaE, ListaJugador &listaJ){
    int contarARQ, contarDEF, contarMED, contarDEL, valorT,tamanioE,tamanioJ;
    char* error;
    Configuracion config;
    Jugador jugador;
    Equipo equipo;
    PtrNodoListaEquipo cursorE=primeroEquipo(listaE);
    PtrNodoLista cursorJ= primero(listaJ);
    tamanioE=longitudEquipo(listaE);
    tamanioJ=longitud(listaJ);
    for(int i=0;i<tamanioE;i++){
        obtenerDatoEquipo(listaE,equipo,cursorE);
        for(int j=0;j<tamanioJ;j++){
            obtenerDato(listaJ,jugador,cursorJ);
            if (jugador.posision=ARQ){
                contarARQ=contarARQ +1;
            }
            if (jugador.posision=DEF){
                contarDEF=contarDEF +1;
            }
            if (jugador.posision=MED){
                contarMED=contarMED +1;
            }
            if (jugador.posision=ARQ){
                contarDEL=contarDEL +1;
            }
            valorT=valorT+jugador.precio;

            if(ARQ>getARQ(config)){
                strcpy(error,"Cantidad de arqueros disponible superada");
                cout<<"El equipo "<<getNombre(equipo)<<" sera eliminado"<<endl;
                escribirError(error);
                eliminarNodoEquipo(listaE,cursorE);
            }

            if(DEF>getDEF(config)){
                strcpy(error,"Cantidad de defensores disponible superada");
                cout<<"El equipo "<<getNombre(equipo)<<" sera eliminado"<<endl;
                escribirError(error);
                eliminarNodoEquipo(listaE,cursorE);
            }

            if(MED>getMED(config)){
                strcpy(error,"Cantidad de mediocampistas disponible superada");
                cout<<"El equipo "<<getNombre(equipo)<<" sera eliminado"<<endl;
                escribirError(error);
                eliminarNodoEquipo(listaE,cursorE);
            }

            if(DEL>getDEL(config)){
                strcpy(error,"Cantidad de delanteros disponible superada");
                cout<<"El equipo "<<getNombre(equipo)<<" sera eliminado"<<endl;
                escribirError(error);
                eliminarNodoEquipo(listaE,cursorE);
            }

            if(valorT>getValorMaximoXEquipo(config)>valorT){
                strcpy(error,"Valor maximo por equipo superada");
                cout<<"El equipo "<<getNombre(equipo)<<" sera eliminado"<<endl;
                escribirError(error);
                eliminarNodoEquipo(listaE,cursorE);
            }
        }
        PtrNodoListaEquipo cursorE=siguienteEquipo(listaE,cursorE);
    }
}

